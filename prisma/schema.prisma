// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String?
  username  String    @unique
  password  String
  avatar   String?
  background String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())

  @@index([userId])
}

model Comment {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  postId    String    @db.ObjectId
  post      Post      @relation(fields: [postId], references: [id])
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())

  @@index([postId])
  @@index([userId])
}

model Like {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  postId    String?   @db.ObjectId
  post      Post?     @relation(fields: [postId], references: [id])
  commentId String?   @db.ObjectId
  comment   Comment?  @relation(fields: [commentId], references: [id])
  createdAt DateTime  @default(now())

  @@index([userId])
  @@index([postId])
  @@index([commentId])
}
